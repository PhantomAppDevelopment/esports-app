<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" viewActivate="init(event)" title="Add Games" xmlns:local="*" viewDeactivate="closePopUp()" resize="resize(event)">
	<fx:Script>
		<![CDATA[
			import mx.collections.XMLListCollection;
			import mx.core.FlexGlobals;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			
			private var addGameStatement:SQLStatement;
			
			protected function init(event:ViewNavigatorEvent):void
			{
				mainService.url = "http://phantom.im/esports/main.xml";
				mainService.send();
			}
			
			protected function mainResult(event:ResultEvent):void
			{
				gamesList.dataProvider = new XMLListCollection(new XMLList(event.result.game));
			}
			
			public function addGame():void
			{
				addGameStatement = new SQLStatement();
				addGameStatement.sqlConnection = FlexGlobals.topLevelApplication.conn;
				addGameStatement.addEventListener(SQLEvent.RESULT, addGameResult);
				addGameStatement.addEventListener(SQLErrorEvent.ERROR, addGameError);
				var addGameQuery:String = "INSERT INTO users_games (gameid, name) VALUES " +
					"('"+gamesList.selectedItem.id+"','"+gamesList.selectedItem.name+"')";
				
				addGameStatement.text = addGameQuery;
				addGameStatement.execute();
			}

			
			private function addGameResult(event:SQLEvent):void{
				var result:SQLResult = addGameStatement.getResult();
				trace(result);
				FlexGlobals.topLevelApplication.loadSavedGames();
			}
			
			private function addGameError(event:SQLErrorEvent):void{
				trace(event.error);
			}
			
			private function goAddNewGame():void{
				myCallout.closeDropDown();
				popup.open(this, true);
				PopUpManager.centerPopUp(popup);
			}
			
			private function closePopUp():void
			{
				if(popup.isOpen == true){
					popup.close();
				}
			}	
			
			protected function resize(event:ResizeEvent):void
			{
				if(popup.isOpen == true){
					PopUpManager.centerPopUp(popup);
				}
			}
			
			protected function faultHandler(event:FaultEvent):void
			{
				mainService.url = "assets/main.xml";
				mainService.send();
			}
			
		]]>
	</fx:Script>

	<fx:Declarations>
		<s:HTTPService id="mainService" resultFormat="e4x" result="mainResult(event)" fault="faultHandler(event)"/>
		<local:AddGamePopUp id="popup"/>
	</fx:Declarations>
	
	<s:actionContent>
		<s:CalloutButton id="myCallout" horizontalPosition="middle">
			<s:icon>
				<s:MultiDPIBitmapSource source160dpi="@Embed('assets/icons/160/072-Settings.png')"
										source240dpi="@Embed('assets/icons/240/072-Settings.png')"
										source320dpi="@Embed('assets/icons/320/072-Settings@2x.png')"/>
			</s:icon>
			<s:calloutLayout>
				<s:VerticalLayout gap="0"/>
			</s:calloutLayout>
			<s:ViewMenuItem width="250" height="100%" label="Add a Non-Default Game" click="goAddNewGame()"/>
		</s:CalloutButton>
	</s:actionContent>
	
	<s:List id="gamesList" change="addGame()" left="0" right="0" top="0" bottom="0">
		<s:itemRenderer>
			<fx:Component>
				<s:IconItemRenderer labelField="name" messageField="developer" messageStyleName="myMessageStyle">
					<s:decorator>
						<s:MultiDPIBitmapSource source160dpi="@Embed('assets/icons/160/add160.png')"
												source240dpi="@Embed('assets/icons/240/add240.png')"
												source320dpi="@Embed('assets/icons/320/add320.png')"/>
					</s:decorator>
				</s:IconItemRenderer>
			</fx:Component>
		</s:itemRenderer>
	</s:List>
</s:View>
