<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="{data.label}" xmlns:views="views.*" viewActivate="init(event)" destructionPolicy="never">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			
			import viewsMedia.ChannelDetails;
			import viewsMedia.ChannelSearch;
			import viewsMedia.RecentVideos;
			import viewsMedia.VideoDetails;
			
			import viewsNews.AddFeedView;
			import viewsNews.RSSDetails;
			import viewsNews.RSSView;
			import viewsNews.RedditView;

			private var deleteGameStatement:SQLStatement;
			private var loadChannelsStatement:SQLStatement;
			private var loadFeedsStatement:SQLStatement;
			private var rawData:Object;
			
			protected function deleteGame():void
			{
				deleteGameStatement = new SQLStatement();
				deleteGameStatement.sqlConnection = FlexGlobals.topLevelApplication.conn;
				deleteGameStatement.addEventListener(SQLEvent.RESULT, deleteGameResult);
				deleteGameStatement.addEventListener(SQLErrorEvent.ERROR, deleteGameError);
				var deleteGameQuery:String = "DELETE FROM users_games WHERE gameid= '"+data.gameid+"'";
				
				deleteGameStatement.text = deleteGameQuery;
				deleteGameStatement.execute();
			}
						
			private function deleteGameResult(event:SQLEvent):void{
				FlexGlobals.topLevelApplication.loadSavedGames();
				parentDocument.navigator.pushView(MainView);
			}
			
			private function deleteGameError(event:SQLErrorEvent):void{
				trace(event.error);
			}


			protected function init(event:ViewNavigatorEvent):void
			{
				if(currentState == "GameOverviewState"){
					loadOverview();
				} else if(currentState == "GameChannelsState"){
					loadChannels();
				} else if(currentState == "GameFeedsState"){
					loadFeeds();
				}
			}
			
			private function changeState(stateName:String):void{
				currentState = stateName;
			}

			
			protected function enterGameoverViewState(event:FlexEvent):void
			{
				loadOverview();
			}
			
			protected function enterGameChannelsState(event:FlexEvent):void
			{
				loadChannels();
			}
			
			protected function enterGameFeedsState(event:FlexEvent):void
			{
				loadFeeds();
			}
			
			private function loadOverview():void
			{
				newsService.url = "https://news.google.com/news/feeds?q="+escape(data.label)+"&output=rss";
				newsService.send();
				
				loadRecentVideos();
			}
			
			private function goRSSReader(newsID:int):void{
				var myObject:Object = new Object();
				myObject.title = newsService.lastResult.channel.item[newsID].title;
				myObject.description = newsService.lastResult.channel.item[newsID].description;
				navigator.pushView(RSSDetails, myObject);
			}
			
			private function goVideoDetails(title:String, videoid:String):void{
				var myObject:Object = new Object();
				myObject.title = title;
				myObject.url = videoid;
				navigator.pushView(VideoDetails, myObject);
			}
			
			protected function resultHandler(event:ResultEvent):void
			{
				news1.text = event.result.channel.item[0].title;
				news2.text = event.result.channel.item[1].title;
				news3.text = event.result.channel.item[2].title;
			}
			
			protected function goReadMore(event:MouseEvent):void
			{
				var myObject:Object = new Object();
				myObject.title = data.label;
				myObject.url = newsService.url;
				navigator.pushView(RSSView, myObject);
			}
			
			private function loadRecentVideos():void{
				videosService.url = "https://www.googleapis.com/youtube/v3/search?q="+escape(data.label+" VOD")+"&maxResults=3&order=date&type=video&part=snippet&key="+EsportsApp.YOUTUBE_API_KEY;
				videosService.send();
			}
			
			protected function videosResultHandler(event:ResultEvent):void
			{
				rawData = JSON.parse(String(event.result));
				
				videotitle1.text = rawData.items[0].snippet.title;
				videoauthor1.text = rawData.items[0].snippet.channelTitle;
				video1.source = rawData.items[0].snippet.thumbnails.medium.url;
				
				videotitle2.text = rawData.items[1].snippet.title;
				videoauthor2.text = rawData.items[1].snippet.channelTitle;
				video2.source = rawData.items[1].snippet.thumbnails.medium.url;
				
				videotitle3.text = rawData.items[2].snippet.title;
				videoauthor3.text = rawData.items[2].snippet.channelTitle;
				video3.source = rawData.items[2].snippet.thumbnails.medium.url;
			}
			
			protected function goRecentVideos(event:MouseEvent):void
			{
				var myObject:Object = new Object();
				myObject.label = data.label;
				myObject.name = escape(data.label+" VOD");
				navigator.pushView(RecentVideos, myObject);
			}
			
			private function loadChannels():void{
				loadChannelsStatement = new SQLStatement();
				loadChannelsStatement.sqlConnection = FlexGlobals.topLevelApplication.conn;
				loadChannelsStatement.addEventListener(SQLEvent.RESULT, loadChannelsResult);
				loadChannelsStatement.addEventListener(SQLErrorEvent.ERROR, loadChannelsError);
				var loadChannelsQuery:String = "SELECT * FROM users_channels WHERE gameid= '"+data.gameid+"'";
				
				loadChannelsStatement.text = loadChannelsQuery;
				loadChannelsStatement.execute();
			}
			
			private function loadChannelsResult(event:SQLEvent):void{
				var result:SQLResult = loadChannelsStatement.getResult();
				var channelsArray:Array = new Array();
				
				if(result.data != null){
					for(var i:int = 0; i<result.data.length; i++){
						channelsArray.push({id:result.data[i].id, gameid:result.data[i].gameid, title:unescape(result.data[i].channelName), channelID:result.data[i].channelID, thumbnail:unescape(result.data[i].thumbnail)});					
					}
				} else {
					//
				}
				channelsList.dataProvider = new ArrayList(channelsArray);
			}
			
			private function loadChannelsError(error:SQLErrorEvent):void{
				//trace(error.errorID);
			}
			
			protected function goSearchChannels(event:MouseEvent):void
			{
				var myObject:Object = new Object();
				myObject.gameid = data.gameid;
				myObject.label = data.label;
				myObject.name = escape(data.label);
				navigator.pushView(ChannelSearch, myObject);
			}
			
			protected function goYoutubeCHannel(event:IndexChangeEvent):void
			{
				var myObject:Object = new Object();
				myObject.id = channelsList.selectedItem.id;
				myObject.title = channelsList.selectedItem.title;
				myObject.channelID = channelsList.selectedItem.channelID;
				navigator.pushView(ChannelDetails, myObject);
			}
			
			private function loadFeeds():void{
				loadFeedsStatement = new SQLStatement();
				loadFeedsStatement.sqlConnection = FlexGlobals.topLevelApplication.conn;
				loadFeedsStatement.addEventListener(SQLEvent.RESULT, loadFeedsResult);
				loadFeedsStatement.addEventListener(SQLErrorEvent.ERROR, loadFeedsError);
				var loadFeedsQuery:String = "SELECT * FROM users_Feeds WHERE gameid= '"+data.gameid+"'";
				
				loadFeedsStatement.text = loadFeedsQuery;
				loadFeedsStatement.execute();
			}
			
			private function loadFeedsResult(event:SQLEvent):void{
				var result:SQLResult = loadFeedsStatement.getResult();
				var FeedsArray:Array = new Array();
				
				if(result.data != null){
					for(var i:int = 0; i<result.data.length; i++){
						FeedsArray.push({id:result.data[i].id, 
							gameid:result.data[i].gameid, 
							title:unescape(result.data[i].name), 
							description:unescape(result.data[i].description), 
							url:result.data[i].url, 
							subredditID:result.data[i].subredditID, 
							type:result.data[i].type});					
					}
				} else {
					//
				}
				
				feedsList.dataProvider = new ArrayList(FeedsArray);
			}
			
			private function loadFeedsError(error:SQLErrorEvent):void{
				//trace(error.errorID);
			}
			
			protected function goAddFeed(event:MouseEvent):void
			{
				var myObject:Object = new Object();
				myObject.gameid = data.gameid;
				myObject.label = data.label;
				navigator.pushView(AddFeedView, myObject);
			}
			
			protected function goRSSView(event:IndexChangeEvent):void
			{
				var myObject:Object = new Object();
				myObject.id = feedsList.selectedItem.id;
				myObject.gameid = data.gameid;
				myObject.title = feedsList.selectedItem.title;
				myObject.url = feedsList.selectedItem.url;
				myObject.subredditID = feedsList.selectedItem.subredditID;
				
				if(feedsList.selectedItem.type == "rss"){
					navigator.pushView(RSSView, myObject);
				} else if(feedsList.selectedItem.type == "subreddit"){
					navigator.pushView(RedditView, myObject);
				}
				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:HTTPService id="newsService" resultFormat="e4x" result="resultHandler(event)" />
		<s:HTTPService id="videosService" result="videosResultHandler(event)" resultFormat="text"/>
	</fx:Declarations>
	
	<s:states>
		<s:State name="GameOverviewState" enterState="enterGameoverViewState(event)" />
		<s:State name="GameChannelsState" enterState="enterGameChannelsState(event)" />
		<s:State name="GameFeedsState" enterState="enterGameFeedsState(event)" />
	</s:states>
	
	<s:actionContent>
		<s:CalloutButton>
			<s:icon>
				<s:MultiDPIBitmapSource source160dpi="@Embed('assets/icons/160/072-Settings.png')"
										source240dpi="@Embed('assets/icons/240/072-Settings.png')"
										source320dpi="@Embed('assets/icons/320/072-Settings@2x.png')"/>
			</s:icon>
			<s:calloutLayout>
				<s:VerticalLayout gap="0"/>
			</s:calloutLayout>
			<s:ViewMenuItem width="200" label="Delete Game" click="deleteGame()"/>
		</s:CalloutButton>
	</s:actionContent>
	
	<s:Rect width="100%" top="0" height="50">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:entries>
					<s:GradientEntry color="#006D7B"/>
					<s:GradientEntry color="#1F3C4B"/>														
				</s:entries>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:HGroup id="mainButtonbar" width="100%" top="0" height="50" gap="0" columnWidth="{mainButtonbar.width/3}" verticalAlign="middle">
		<s:Label text="Overview" fontFamily="MyFont" fontSize="12" width="33%" textAlign="center"/>		
		<s:Label text="Channels" fontFamily="MyFont" fontSize="12" width="33%" textAlign="center"/>
		<s:Label text="Feeds" fontFamily="MyFont" fontSize="12" width="33%" textAlign="center"/>
	</s:HGroup>
	
	<s:Graphic click="changeState('GameOverviewState')" top="0" left="0">
		<s:Rect width="{mainButtonbar.width/3}" height="50"/>
	</s:Graphic>
	
	<s:Graphic click="changeState('GameChannelsState')" top="0" horizontalCenter="0">
		<s:Rect width="{mainButtonbar.width/3}" height="50"/>
	</s:Graphic>
	
	<s:Graphic click="changeState('GameFeedsState')" top="0" right="0">
		<s:Rect width="{mainButtonbar.width/3}" height="50"/>
	</s:Graphic>
	
	<s:Rect id="blueRect" width="33%" y="45" height="5" right.GameFeedsState="0" left.GameOverviewState="0" horizontalCenter.GameChannelsState="0">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:entries>
					<s:GradientEntry color="#0099FF"/>
					<s:GradientEntry color="#006D7B"/>				
				</s:entries>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:Line width="100%" height="1" y="45">
		<s:stroke>
			<s:SolidColorStroke color="#617680"/>
		</s:stroke>
	</s:Line>
		
	<s:Line width="100%" height="1" y="50">
		<s:stroke>
			<s:SolidColorStroke color="#617680"/>
		</s:stroke>
	</s:Line>
	
	
	<s:Scroller includeIn="GameOverviewState" left="10" right="10" top="50" bottom="10">
		<s:VGroup id="MainGroup" gap="0" width="100%" height="100%">
			
			<s:Group width="100%" height="50">
				<s:Label verticalCenter="0" left="10" fontFamily="MyFont" color="#FFBA00" text="Latest News" fontSize="12"/>
				<s:Label verticalCenter="0" right="10" fontFamily="MyFont" text="View More" click="goReadMore(event)" fontSize="12" textDecoration="underline"/>
			</s:Group>
			
			<s:Group width="100%" height="140">
				<s:Rect radiusX="5" radiusY="5" width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="#006D7B"/>
					</s:fill>
				</s:Rect>
							
				<s:BitmapImage x="10" top="15" source="assets/icons/feed.png" smooth="true" width="20" height="20"/>
				<s:Label id="news1" top="10" left="40" right="10" maxDisplayedLines="2"/>
				<s:Graphic click="goRSSReader(0)" top="0">
					<s:Rect width="{MainGroup.width}" height="45" />
				</s:Graphic>
				
				<s:BitmapImage x="10" bottom="0" source="assets/icons/feed.png" smooth="true" width="20" height="20" verticalCenter="0"/>
				<s:Label id="news2" left="40" right="10" verticalCenter="0" maxDisplayedLines="2"/>
				<s:Graphic click="goRSSReader(1)" verticalCenter="0">
					<s:Rect width="{MainGroup.width}" height="45" />
				</s:Graphic>

				<s:BitmapImage x="10" bottom="15" source="assets/icons/feed.png" smooth="true" width="20" height="20"/>
				<s:Label id="news3" bottom="10" left="40" right="10" maxDisplayedLines="2"/>
				<s:Graphic click="goRSSReader(2)" bottom="0">
					<s:Rect width="{MainGroup.width}" height="45" />
				</s:Graphic>
			</s:Group>			
			
						
			<s:Group width="100%" height="50">
				<s:Label left="10" verticalCenter="0" fontFamily="MyFont" color="#FFBA00" text="Recent VODs" fontSize="12"/>
				<s:Label right="10" verticalCenter="0" fontFamily="MyFont" text="View More" click="goRecentVideos(event)" fontSize="12" textDecoration="underline"/>
			</s:Group>		
			
			<s:Group width="100%" height="270" >
				<s:Rect radiusX="5" radiusY="5" width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="#006D7B"/>
					</s:fill>
				</s:Rect>
								
				<s:BitmapImage id="video1" x="10" y="10" smooth="true" width="100" height="75"/>
				<s:Label id="videotitle1" left="120" right="10" y="10" maxDisplayedLines="3"/>
				<s:Label id="videoauthor1" top="65" left="120" right="10" color="#FFBA00" maxDisplayedLines="1"/>
				<s:Graphic click="goVideoDetails(rawData.items[0].snippet.title, rawData.items[0].id.videoId)" top="0">
					<s:Rect width="{MainGroup.width}" height="90" />
				</s:Graphic>
				
				<s:BitmapImage id="video2" x="10" smooth="true" width="100" height="75" verticalCenter="0"/>
				<s:Label id="videotitle2" left="120" right="10" y="100" maxDisplayedLines="3"/>
				<s:Label id="videoauthor2" top="150" left="120" right="10" color="#FFBA00" maxDisplayedLines="1"/>
				<s:Graphic click="goVideoDetails(rawData.items[1].snippet.title, rawData.items[1].id.videoId)" verticalCenter="0">
					<s:Rect width="{MainGroup.width}" height="90" />
				</s:Graphic>
				
				<s:BitmapImage id="video3" x="10" bottom="10" smooth="true" width="100" height="75"/>
				<s:Label id="videotitle3" left="120" right="10" y="185" maxDisplayedLines="3"/>
				<s:Label id="videoauthor3" bottom="10" left="120" right="10" color="#FFBA00" lineBreak="toFit" maxDisplayedLines="1"/>
				<s:Graphic click="goVideoDetails(rawData.items[2].snippet.title, rawData.items[2].id.videoId)" bottom="0">
					<s:Rect width="{MainGroup.width}" height="90" />
				</s:Graphic>
			</s:Group>
			
		</s:VGroup>
	</s:Scroller>
	
	<!-- Gamechannels -->
	
	<s:Group includeIn="GameChannelsState" top="50" height="50" width="100%">
		<s:Label verticalCenter="0" left="10" fontFamily="MyFont" color="#FFBA00" text="Community Channels" fontSize="12"/>
		<s:Label verticalCenter="0" right="10" fontFamily="MyFont" text="Add More" click="goSearchChannels(event)" fontSize="12" textDecoration="underline"/>
	</s:Group>
	
	<s:List includeIn="GameChannelsState" id="channelsList" change="goYoutubeCHannel(event)" left="5" right="5" top="100" bottom="5">
		<s:itemRenderer>
			<fx:Component>
				<s:IconItemRenderer labelFunction="myLabelFunction" iconFunction="myIconFunction" iconWidth="40" iconHeight="40" iconScaleMode="letterbox">
					<fx:Script>
						<![CDATA[
							
							private function myLabelFunction(item:Object):String{
								return data.title;
							}
							
							private function myIconFunction(item:Object):String{
								return data.thumbnail;
							}
						]]>
					</fx:Script>
				</s:IconItemRenderer>
			</fx:Component>
		</s:itemRenderer>
	</s:List>
	
	<!-- GameFeeds -->
	
	<s:Group includeIn="GameFeedsState" top="50" height="50" width="100%">
		<s:Label verticalCenter="0" left="10" fontFamily="MyFont" color="#FFBA00" text="Community Feeds" fontSize="12"/>
		<s:Label verticalCenter="0" right="10" fontFamily="MyFont" text="Add More" click="goAddFeed(event)" fontSize="12" textDecoration="underline"/>
	</s:Group>
	
	<s:List includeIn="GameFeedsState" id="feedsList" change="goRSSView(event)" left="5" right="5" top="100" bottom="5">
		<s:itemRenderer>
			<fx:Component>
				<s:IconItemRenderer iconScaleMode="letterbox" iconWidth="20" iconHeight="20" iconFunction="myIconFunction" messageStyleName="myMessageStyle" labelFunction="myLabelFunction" messageFunction="myMessageFunction">
					<fx:Script>
						<![CDATA[
							
							private function myLabelFunction(item:Object):String{
								return data.title;
							}
							
							private function myMessageFunction(item:Object):String{
								return data.description;
							}
							
							private function myIconFunction(item:Object):String{
								return "assets/icons/"+data.type.toString()+".png";
							}
							
						]]>
					</fx:Script>
				</s:IconItemRenderer>
			</fx:Component>
		</s:itemRenderer>
	</s:List>
	
</s:View>
