<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		tabBarVisible="false" title="{data.title}" viewActivate="init(event)" backKeyPressed="backPress(event)"
		viewDeactivate="goBack(event)" >
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			import spark.events.ViewNavigatorEvent;
			
			private var myStageWebView:StageWebView;		
			private var fontPercent:Number;
			private var currentFlexScalingFactor:Number = FlexGlobals.topLevelApplication.runtimeDPI/FlexGlobals.topLevelApplication.applicationDPI;
			
			protected function init(event:ViewNavigatorEvent):void
			{			
				stage.addEventListener(Event.RESIZE, resize);
				trace(data.description);
				myStageWebView = new StageWebView();
				myStageWebView.viewPort = new Rectangle(myRect.x, myRect.y*currentFlexScalingFactor+FlexGlobals.topLevelApplication.navigator.actionBar.height*currentFlexScalingFactor, myRect.width*currentFlexScalingFactor, myRect.height*currentFlexScalingFactor);
				myStageWebView.stage = this.stage;
				myStageWebView.loadString("<html><head><style type='text/css'>"+
					"body {background-color:#1D292E;}"+
					"body {color:white;}"+
					"body {padding:10px;}"+
					"body {font-size:"+14*currentFlexScalingFactor+"px;}"+
					"body {font-family:helvetica;}"+
					"a:link {color:#FFFFFF;}"+
					"a:visited {color:#FFFFFF;}"+  
					"a:hover {color:#FFFFFF;}"+
					"a:active {color:#FFFFFF;}"+
					"</style></head><body>"+data.description+"</body></html>");
			}
			
			protected function goBack(event:ViewNavigatorEvent):void
			{
				myStageWebView.dispose();
				stage.removeEventListener(Event.RESIZE, resize);
			}
			
			protected function resize(event:Event):void
			{
				myStageWebView.viewPort = new Rectangle(myRect.x, myRect.y*currentFlexScalingFactor+FlexGlobals.topLevelApplication.navigator.actionBar.height*currentFlexScalingFactor, myRect.width*currentFlexScalingFactor, myRect.height*currentFlexScalingFactor);
			}
			
			protected function backPress(event:FlexEvent):void
			{
				event.preventDefault();
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:actionContent>
		<s:Button click="navigateToURL(new URLRequest(data.link))">
			<s:icon>
				<s:MultiDPIBitmapSource source160dpi="@Embed('assets/icons/160/085-Connect.png')"
										source240dpi="@Embed('assets/icons/240/085-Connect.png')"
										source320dpi="@Embed('assets/icons/320/085-Connect@2x.png')"/>
			</s:icon>
		</s:Button>
	</s:actionContent>
	
	<s:navigationContent>
		<s:Button click="navigator.popView()">
			<s:icon>
				<s:MultiDPIBitmapSource source160dpi="@Embed('assets/icons/160/257-RSSAlt.png')"
										source240dpi="@Embed('assets/icons/240/257-RSSAlt.png')"
										source320dpi="@Embed('assets/icons/320/257-RSSAlt@2x.png')"/>
			</s:icon>
		</s:Button>
	</s:navigationContent>
	
	<s:Rect id="myRect" radiusX="5" radiusY="5" left="10" right="10" top="10" bottom="10"/>
	
</s:View>

